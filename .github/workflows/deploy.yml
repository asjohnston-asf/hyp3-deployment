name: Deploy a copy of HyP3 to AWS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: environment
        required: true

concurrency: ${{ inputs.environment }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          repository: ASFHyP3/HyP3
          ref: ${{ vars.HYP3_BRANCH }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - run: |
          pip install --upgrade pip
          make install
          make files='${{ vars.JOB_FILES }}' security_environment=${{ vars.SECURITY_ENVIRONMENT }} api_name=${{ vars.API_NAME }} cost_profile=${{ vars.COST_PROFILE }} build

      - run: |
          aws cloudformation package \
            --template-file apps/main-cf.yml \
            --s3-bucket ${{ vars.TEMPLATE_BUCKET }} \
            --output-template-file packaged.yml
          aws cloudformation deploy \
            --stack-name ${{ vars.STACK_NAME }} \
            --role-arn ${{ secrets.CLOUDFORMATION_ROLE_ARN }} \
            --template-file packaged.yml \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
                VpcId='${{ secrets.VPC_ID }}' \
                SubnetIds='${{ secrets.SUBNET_IDS }}' \
                SecretArn='${{ secrets.SECRET_ARN }}' \
                AuthPublicKey='${{ vars.AUTH_PUBLIC_KEY }}' \
                CertificateArn='${{ secrets.CERTIFICATE_ARN }}' \
                ImageTag='${{ vars.IMAGE_TAG }}' \
                ProductLifetimeInDays='${{ vars.PRODUCT_LIFETIME_IN_DAYS }}' \
                DefaultCreditsPerUser='${{ vars.DEFAULT_CREDITS_PER_USER }}' \
                DefaultApplicationStatus='${{ vars.DEFAULT_APPLICATION_STATUS }}' \
                AmiId='${{ vars.AMI_ID }}' \
                DefaultMaxvCpus='${{ vars.DEFAULT_MAX_VCPUS }}' \
                ExpandedMaxvCpus='${{ vars.EXTENDED_MAX_VCPUS }}' \
                MonthlyBudget='${{ vars.MONTHLY_BUDGET }}' \
                RequiredSurplus='${{ vars.REQUIRED_SURPLUS }}' \
                InstanceTypes='${{ vars.INSTANCE_TYPES }}' \
                DomainName='${{ vars.DOMAIN_NAME }}'
